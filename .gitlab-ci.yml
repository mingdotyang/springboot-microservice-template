image: easybest/cibase

stages:
- mvn-package
- mvn-deploy
- docker-build

maven-package-build:
  stage: mvn-package
  script:
  - mvn package -U -DskipTests=false
  - mkdir -p /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
  - cp svc/target/app.jar /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/app.jar

maven-package-deploy:
  stage: mvn-deploy
  script:
  - mvn clean deploy -DskipTests
  only:
  - master

docker-build:
  stage: docker-build
  script:
  - docker_build
  - chart_build
  only:
  - tags
  - /^hotfix-.*$/
  - /^release-.*$/

.auto_devops: &auto_devops |
  curl -o .auto_devops.sh \
      "${MINERVA_URL}/devops/ci?token=${Token}&type=microservice"
  if [ $? -ne 0 ];then
    cat .auto_devops.sh
    exit 1
  fi
  source .auto_devops.sh
  function docker_build(){
      cp /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}/app.jar ${1:-"src/main/docker"}/app.jar || true
      docker login -u ${ALI_DOCKER_USERNAME} -p ${ALI_DOCKER_PASSWORD} registry.cn-hangzhou.aliyuncs.com
      docker build --pull -t registry.cn-hangzhou.aliyuncs.com/yjyp/${GROUP_NAME}-${PROJECT_NAME}:${CI_COMMIT_TAG} ${1:-"src/main/docker"}
      docker push registry.cn-hangzhou.aliyuncs.com/yjyp/${GROUP_NAME}-${PROJECT_NAME}:${CI_COMMIT_TAG}
      rm -rf /cache/${CI_PROJECT_NAME}-${CI_PROJECT_ID}-${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHA}
  }

before_script:
- *auto_devops
